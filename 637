/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Double> averageOfLevels(TreeNode root) {
        List<Double> list= new ArrayList<>();
        
        Queue<TreeNode> q= new ArrayDeque<>();
        
        q.add(root);
        
        while(q.size()>0){
            List<Integer> temp = new ArrayList<>();
            
            int s= q.size();
            for(int i=0; i<s ;i++){
                TreeNode node= q.remove();
                temp.add(node.val);
                
                if(node.left != null){
                    q.add(node.left);
                }
                if(node.right != null){
                    q.add(node.right);
                }
            }
            double sum=0;
            for(int i=0; i< temp.size(); i++){
                sum+= (double) temp.get(i);
            }
            double avg= (double) sum/temp.size(); 
            list.add(avg);
        }
        return list;
    }
}
